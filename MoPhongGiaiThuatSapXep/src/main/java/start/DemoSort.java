/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package start;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.text.ParseException;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author time0
 */
public class DemoSort extends javax.swing.JFrame {

    /**
     * Creates new form DemoSort
     */
    public DemoSort() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupAgl = new javax.swing.ButtonGroup();
        jButtonHandCreateArray = new javax.swing.JButton();
        jPanelMain = new javax.swing.JPanel();
        jPanelSub1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabelBestCase = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabelWorstCase = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabelAlgo = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabelLevelAlg = new javax.swing.JLabel();
        jPanelMenu = new javax.swing.JPanel();
        jSpinnerArrLength = new javax.swing.JSpinner();
        jButtonRun = new javax.swing.JButton();
        jPanelSoluong = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelRandom = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanelAlmostSorted = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanelReverse = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanelReadFile = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanelSaveArray = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanelTakeArray = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanelHandCreateArray = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPaneContentAgl = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jPanel1Sub2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabelCountSwap = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jRadioButtonBubble = new javax.swing.JRadioButton();
        jRadioButtonSelection = new javax.swing.JRadioButton();
        jRadioButtonInsertion = new javax.swing.JRadioButton();
        jRadioButtonHeap = new javax.swing.JRadioButton();
        jRadioButtonQuick = new javax.swing.JRadioButton();

        jButtonHandCreateArray.setBackground(new java.awt.Color(71, 120, 197));
        jButtonHandCreateArray.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jButtonHandCreateArray.setText("Tạo mảng");
        jButtonHandCreateArray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonHandCreateArrayMousePressed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mô Phỏng Giải Thuật Sắp Xếp");
        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setName("frameMain"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMain.setBackground(new java.awt.Color(84, 125, 206));
        jPanelMain.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 1150, 390));

        jPanelSub1.setBackground(new java.awt.Color(71, 120, 197));

        jPanel2.setBackground(new java.awt.Color(120, 168, 252));

        jLabelBestCase.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelBestCase.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBestCase.setText("Trường hợp tốt nhất: θ(n+k)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBestCase, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelBestCase)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(120, 168, 252));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWorstCase.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelWorstCase.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWorstCase.setText("Trường hợp xấu nhất: θ(n^2)");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelWorstCase, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelWorstCase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(120, 168, 252));

        jLabelAlgo.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabelAlgo.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAlgo.setText("Giải thuật sử dụng: Sắp xếp nổi bọt - Bubble sort ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelAlgo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(7, 51, 105));

        jLabelLevelAlg.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabelLevelAlg.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLevelAlg.setText("Cấp độ: Dễ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLevelAlg, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelLevelAlg)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelSub1Layout = new javax.swing.GroupLayout(jPanelSub1);
        jPanelSub1.setLayout(jPanelSub1Layout);
        jPanelSub1Layout.setHorizontalGroup(
            jPanelSub1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSub1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addGroup(jPanelSub1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSub1Layout.setVerticalGroup(
            jPanelSub1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSub1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(jPanelSub1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelSub1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 1150, 100));

        jPanelMenu.setBackground(new java.awt.Color(26, 35, 71));
        jPanelMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSpinnerArrLength.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jSpinnerArrLength.setModel(new javax.swing.SpinnerNumberModel(5, 5, 15, 1));
        jSpinnerArrLength.setToolTipText("");
        jSpinnerArrLength.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSpinnerArrLength.setMaximumSize(new java.awt.Dimension(5, 15));
        jSpinnerArrLength.setMinimumSize(new java.awt.Dimension(0, 5));
        jPanelMenu.add(jSpinnerArrLength, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 128, 72, -1));

        jButtonRun.setBackground(new java.awt.Color(71, 120, 225));
        jButtonRun.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonRun.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRun.setText("Sắp xếp");
        jButtonRun.setBorder(null);
        jButtonRun.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonRun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                runSort(evt);
            }
        });
        jPanelMenu.add(jButtonRun, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 110, 30));

        jPanelSoluong.setBackground(new java.awt.Color(7, 51, 105));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 255, 255));
        jLabel1.setText("Số phần tử");

        javax.swing.GroupLayout jPanelSoluongLayout = new javax.swing.GroupLayout(jPanelSoluong);
        jPanelSoluong.setLayout(jPanelSoluongLayout);
        jPanelSoluongLayout.setHorizontalGroup(
            jPanelSoluongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSoluongLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSoluongLayout.setVerticalGroup(
            jPanelSoluongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSoluongLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelMenu.add(jPanelSoluong, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 130, -1));

        jPanelRandom.setBackground(new java.awt.Color(26, 35, 71));
        jPanelRandom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelRandomMousePressed(evt);
            }
        });

        jPanel11.setOpaque(false);
        jPanel11.setPreferredSize(new java.awt.Dimension(3, 40));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ngẫu nhiên");

        javax.swing.GroupLayout jPanelRandomLayout = new javax.swing.GroupLayout(jPanelRandom);
        jPanelRandom.setLayout(jPanelRandomLayout);
        jPanelRandomLayout.setHorizontalGroup(
            jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRandomLayout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(0, 45, Short.MAX_VALUE))
        );
        jPanelRandomLayout.setVerticalGroup(
            jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRandomLayout.createSequentialGroup()
                .addGroup(jPanelRandomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelRandomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(60, 60, 60))
        );

        jPanelMenu.add(jPanelRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 130, 40));

        jPanelAlmostSorted.setBackground(new java.awt.Color(26, 35, 71));
        jPanelAlmostSorted.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelAlmostSortedMousePressed(evt);
            }
        });

        jPanel14.setOpaque(false);
        jPanel14.setPreferredSize(new java.awt.Dimension(3, 40));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gần sắp xếp");

        javax.swing.GroupLayout jPanelAlmostSortedLayout = new javax.swing.GroupLayout(jPanelAlmostSorted);
        jPanelAlmostSorted.setLayout(jPanelAlmostSortedLayout);
        jPanelAlmostSortedLayout.setHorizontalGroup(
            jPanelAlmostSortedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlmostSortedLayout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelAlmostSortedLayout.setVerticalGroup(
            jPanelAlmostSortedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAlmostSortedLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelAlmostSortedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelMenu.add(jPanelAlmostSorted, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 130, -1));

        jPanelReverse.setBackground(new java.awt.Color(26, 35, 71));
        jPanelReverse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelReverseMousePressed(evt);
            }
        });

        jPanel16.setOpaque(false);
        jPanel16.setPreferredSize(new java.awt.Dimension(3, 40));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Đảo ngược ");

        javax.swing.GroupLayout jPanelReverseLayout = new javax.swing.GroupLayout(jPanelReverse);
        jPanelReverse.setLayout(jPanelReverseLayout);
        jPanelReverseLayout.setHorizontalGroup(
            jPanelReverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReverseLayout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelReverseLayout.setVerticalGroup(
            jPanelReverseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReverseLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelReverseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelMenu.add(jPanelReverse, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 130, -1));

        jPanelReadFile.setBackground(new java.awt.Color(26, 35, 71));
        jPanelReadFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelReadFileMousePressed(evt);
            }
        });

        jPanel18.setOpaque(false);
        jPanel18.setPreferredSize(new java.awt.Dimension(3, 40));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Đọc file");

        javax.swing.GroupLayout jPanelReadFileLayout = new javax.swing.GroupLayout(jPanelReadFile);
        jPanelReadFile.setLayout(jPanelReadFileLayout);
        jPanelReadFileLayout.setHorizontalGroup(
            jPanelReadFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReadFileLayout.createSequentialGroup()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelReadFileLayout.setVerticalGroup(
            jPanelReadFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReadFileLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelReadFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelMenu.add(jPanelReadFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 130, -1));

        jPanelSaveArray.setBackground(new java.awt.Color(26, 35, 71));
        jPanelSaveArray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelSaveArrayMousePressed(evt);
            }
        });

        jPanel20.setOpaque(false);
        jPanel20.setPreferredSize(new java.awt.Dimension(3, 40));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Lưu mảng");

        javax.swing.GroupLayout jPanelSaveArrayLayout = new javax.swing.GroupLayout(jPanelSaveArray);
        jPanelSaveArray.setLayout(jPanelSaveArrayLayout);
        jPanelSaveArrayLayout.setHorizontalGroup(
            jPanelSaveArrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSaveArrayLayout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelSaveArrayLayout.setVerticalGroup(
            jPanelSaveArrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSaveArrayLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelSaveArrayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelMenu.add(jPanelSaveArray, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 130, -1));

        jPanelTakeArray.setBackground(new java.awt.Color(26, 35, 71));
        jPanelTakeArray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelTakeArrayMousePressed(evt);
            }
        });

        jPanel22.setOpaque(false);
        jPanel22.setPreferredSize(new java.awt.Dimension(3, 40));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Lấy mảng");

        javax.swing.GroupLayout jPanelTakeArrayLayout = new javax.swing.GroupLayout(jPanelTakeArray);
        jPanelTakeArray.setLayout(jPanelTakeArrayLayout);
        jPanelTakeArrayLayout.setHorizontalGroup(
            jPanelTakeArrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTakeArrayLayout.createSequentialGroup()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(0, 55, Short.MAX_VALUE))
        );
        jPanelTakeArrayLayout.setVerticalGroup(
            jPanelTakeArrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTakeArrayLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelTakeArrayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelMenu.add(jPanelTakeArray, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 130, -1));

        jPanelHandCreateArray.setBackground(new java.awt.Color(26, 35, 71));
        jPanelHandCreateArray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelHandCreateArrayMousePressed(evt);
            }
        });

        jPanel24.setOpaque(false);
        jPanel24.setPreferredSize(new java.awt.Dimension(3, 40));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nhập tay");

        javax.swing.GroupLayout jPanelHandCreateArrayLayout = new javax.swing.GroupLayout(jPanelHandCreateArray);
        jPanelHandCreateArray.setLayout(jPanelHandCreateArrayLayout);
        jPanelHandCreateArrayLayout.setHorizontalGroup(
            jPanelHandCreateArrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHandCreateArrayLayout.createSequentialGroup()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(0, 61, Short.MAX_VALUE))
        );
        jPanelHandCreateArrayLayout.setVerticalGroup(
            jPanelHandCreateArrayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHandCreateArrayLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelHandCreateArrayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelMenu.add(jPanelHandCreateArray, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 130, -1));

        getContentPane().add(jPanelMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 680));

        jScrollPaneContentAgl.setBorder(null);

        jTextAreaDescription.setEditable(false);
        jTextAreaDescription.setBackground(new java.awt.Color(220, 231, 246));
        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jTextAreaDescription.setLineWrap(true);
        jTextAreaDescription.setRows(5);
        jTextAreaDescription.setText("Bubble Sort là thuật toán sắp xếp đơn giản nhất hoạt động bằng cách hoán đổi nhiều lần các phần tử liền kề nếu chúng không đúng thứ tự.");
        jTextAreaDescription.setToolTipText("Mô tả giải thuật sử dụng");
        jTextAreaDescription.setWrapStyleWord(true);
        jTextAreaDescription.setMargin(new java.awt.Insets(8, 8, 8, 8));
        jScrollPaneContentAgl.setViewportView(jTextAreaDescription);

        getContentPane().add(jScrollPaneContentAgl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 550, 1150, 130));

        jPanel1Sub2.setBackground(new java.awt.Color(84, 125, 206));

        jPanel5.setBackground(new java.awt.Color(120, 168, 252));

        jLabelCountSwap.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelCountSwap.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCountSwap.setText("Số lần hoán đổi");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCountSwap, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCountSwap)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(120, 168, 252));

        buttonGroupAgl.add(jRadioButtonBubble);
        jRadioButtonBubble.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jRadioButtonBubble.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonBubble.setSelected(true);
        jRadioButtonBubble.setText("Bubble");
        jRadioButtonBubble.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioButtonBubbleMousePressed(evt);
            }
        });

        buttonGroupAgl.add(jRadioButtonSelection);
        jRadioButtonSelection.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jRadioButtonSelection.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonSelection.setText("Selection");
        jRadioButtonSelection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioButtonSelectionMousePressed(evt);
            }
        });

        buttonGroupAgl.add(jRadioButtonInsertion);
        jRadioButtonInsertion.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jRadioButtonInsertion.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonInsertion.setText("Insertion");
        jRadioButtonInsertion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioButtonInsertionMousePressed(evt);
            }
        });

        buttonGroupAgl.add(jRadioButtonHeap);
        jRadioButtonHeap.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jRadioButtonHeap.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonHeap.setText("Heap");
        jRadioButtonHeap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioButtonHeapMousePressed(evt);
            }
        });

        buttonGroupAgl.add(jRadioButtonQuick);
        jRadioButtonQuick.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jRadioButtonQuick.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonQuick.setText("Quick");
        jRadioButtonQuick.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioButtonQuickMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButtonBubble)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonSelection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonInsertion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonHeap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonQuick)
                .addGap(70, 70, 70))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonBubble)
                    .addComponent(jRadioButtonSelection)
                    .addComponent(jRadioButtonInsertion)
                    .addComponent(jRadioButtonHeap)
                    .addComponent(jRadioButtonQuick))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout jPanel1Sub2Layout = new javax.swing.GroupLayout(jPanel1Sub2);
        jPanel1Sub2.setLayout(jPanel1Sub2Layout);
        jPanel1Sub2Layout.setHorizontalGroup(
            jPanel1Sub2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Sub2Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 540, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Sub2Layout.setVerticalGroup(
            jPanel1Sub2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Sub2Layout.createSequentialGroup()
                .addGroup(jPanel1Sub2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Sub2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Sub2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );

        getContentPane().add(jPanel1Sub2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 490, 1150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runSort(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runSort
        if(num==0) {
            jLabelArrEmpty.setLocation(460 , 160);
            jPanelMain.add(jLabelArrEmpty);
            jLabelArrEmpty.setSize(200,55);
            jLabelArrEmpty.setFont(new Font("Arial", Font.PLAIN, 25));
            jLabelArrEmpty.setBorder(BorderFactory.createLineBorder(Color.white , 4));
            jLabelArrEmpty.setForeground(Color.white);
            return;
        }
        if(isSort(arrValue) == 1) {
            JDialog jDialog = new JDialog();
            jDialog.setTitle("Thông báo");
            jDialog.setSize(200, 100);
            jDialog.setLocationRelativeTo(null);
            jDialog.setResizable(false);
            JTextArea jTextArea = new JTextArea();
            jTextArea.setText("Mảng đã sắp xếp");
            jTextArea.setEditable(false);
            jDialog.add(jTextArea);
            jDialog.setVisible(true);
            this.jPanelMain.add(jDialog);
        }
        if(jRadioButtonBubble.isSelected()) {
            bubbleSort(arrValue);
            printArray(arrValue);
            jLabelCountSwap.setText("Số lần hoán đổi: " + countSwap);
        }
        if(jRadioButtonSelection.isSelected()) {
            selectionSort(arrValue);
            printArray(arrValue);
            jLabelCountSwap.setText("Số lần hoán đổi: " + countSwap);
        }
        if(jRadioButtonInsertion.isSelected()) {
            insertionSort(arrValue);
            printArray(arrValue);
            jLabelCountSwap.setText("Số lần hoán đổi: " + countSwap);
        }
        if(jRadioButtonHeap.isSelected()) {
            heapSort(arrValue);
            printArray(arrValue);
            jLabelCountSwap.setText("Số lần hoán đổi: " + countSwap);
        }
        if(jRadioButtonQuick.isSelected()) {
            quickSort(arrValue, 0, arrValue.length-1);
            printArray(arrValue);
            jLabelCountSwap.setText("Số lần hoán đổi: " + countSwap);
        }
    }//GEN-LAST:event_runSort

    private void jRadioButtonBubbleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonBubbleMousePressed
        jLabelAlgo.setText("Giải thuật sử dụng: Sắp xếp nổi bọt - Bubble sort");
        jLabelBestCase.setText("Trường hợp tốt nhất: θ(n+k)");
        jLabelWorstCase.setText("Trường hợp xấu nhất: θ(n^2)");
        jTextAreaDescription.setText("Bubble Sort là thuật toán sắp xếp đơn giản nhất hoạt động bằng cách hoán đổi nhiều lần các phần tử liền kề nếu chúng không đúng thứ tự.");
        jLabelLevelAlg.setText("Cấp độ: Dễ");
    }//GEN-LAST:event_jRadioButtonBubbleMousePressed

    private void jRadioButtonSelectionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonSelectionMousePressed
        jLabelAlgo.setText("Giải thuật sử dụng: Sắp xếp chọn - Selection sort");
        jLabelBestCase.setText("Trường hợp tốt nhất: θ(n^2)");
        jLabelWorstCase.setText("Trường hợp xấu nhất: θ(n^2)");
        jTextAreaDescription.setText("Thuật toán sắp xếp lựa chọn sắp xếp một mảng bằng cách liên tục tìm phần tử tối thiểu (xét theo thứ tự tăng dần) từ phần chưa được sắp xếp và đặt nó ở đầu. Thuật toán duy trì hai mảng con trong một mảng nhất định.\n" +
            "1) Mảng con đã được sắp xếp. \n" +
            "2) Mảng con còn lại chưa được sắp xếp.");
        jLabelLevelAlg.setText("Cấp độ: Dễ");
    }//GEN-LAST:event_jRadioButtonSelectionMousePressed

    private void jRadioButtonInsertionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonInsertionMousePressed
        jLabelAlgo.setText("Giải thuật sử dụng: Sắp xếp chèn - Insertion sort");
        jLabelBestCase.setText("Trường hợp tốt nhất: θ(n)");
        jLabelWorstCase.setText("Trường hợp xấu nhất: θ(n^2)");
        jTextAreaDescription.setText("Sắp xếp chèn ( Insertion sort ), là một thuật toán sắp xếp đặt một phần tử chưa được sắp xếp vào vị trí thích hợp trong mỗi lần lặp. Nó kém hiệu quả hơn nhiều trên các danh sách lớn so với các giải thuật nâng cao hơn như sắp xếp nhanh. Tuy nhiên, sắp xếp chèn cũng có điểm mạnh\n" +
            "1) Giải thuật đơn giản, dễ triển khai\n" +
            "2) Khá hiệu quả đối với các tập dữ liệu nhỏ, giống như các thuật toán sắp xếp bậc hai khác");
        jLabelLevelAlg.setText("Cấp độ: Dễ");
    }//GEN-LAST:event_jRadioButtonInsertionMousePressed

    private void jRadioButtonHeapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonHeapMousePressed
        jLabelAlgo.setText("Giải thuật sử dụng: Sắp xếp vung đống - Heap sort");
        jLabelBestCase.setText("Trường hợp tốt nhất: θ(nLogn)");
        jLabelWorstCase.setText("Trường hợp xấu nhất: θ(nLogn)");
        jTextAreaDescription.setText("Sắp xếp theo heap ( Heap sort ), là một kỹ thuật sắp xếp dựa vào so sánh trên cấu trúc dữ liệu nhị phân Heap. Sắp xếp theo heap là một thuật toán sắp xếp phổ biến và hiệu quả trong lập trình máy tính. Để có thể học cách viết thuật toán sắp xếp theo đòi hỏi kiến thức về hai loại cấu trúc dữ liệu là mảng và cây. Sắp xếp theo heap hoạt động bằng cách xem các phần tử của mảng như một cây nhị phân hoàn chỉnh đặc biệt được gọi là nhị phân Heap ( Binary Heap ).");
        jLabelLevelAlg.setText("Cấp độ: Trung bình");
    }//GEN-LAST:event_jRadioButtonHeapMousePressed

    private void jRadioButtonQuickMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonQuickMousePressed
        jLabelAlgo.setText("Giải thuật sử dụng: Sắp xếp nhanh - Quick sort");
        jLabelBestCase.setText("Trường hợp tốt nhất: θ(nLogn)");
        jLabelWorstCase.setText("Trường hợp xấu nhất: θ(n^2)");
        jTextAreaDescription.setText("Sắp xếp nhanh ( Quick sort ), là một thuật toán chia để trị trong đó\n" +
            "1) Một mảng được chia thành các mảng con bằng cách chọn một phần tử làm trục hay pivot ( phần tử được chọn từ mảng ). Trong khi phân chia mảng, phần tử pivot phải được định vị theo cách sao cho các phần tử nhỏ hơn pivot được giữ ở phía bên trái và các phần tử lớn hơn pivot nằm ở phía bên phải pivot. Có nhiều biến thể khác nhau của sắp xếp nhanh trong đó phần tử pivot được chọn ở các vị trí khác nhau. ( Trong ứng dụng mô phỏng này, phần tử bên phải sẽ được chọn làm pivot )\n" +
            "2) Các mảng con bên trái và bên phải cũng được chia theo cùng một cách tiếp cận. Quá trình này tiếp tục cho đến khi mỗi mảng con chứa một phần tử duy nhất");
        jLabelLevelAlg.setText("Cấp độ: Trung bình");
    }//GEN-LAST:event_jRadioButtonQuickMousePressed
// Cac ham thay doi mau sac menu khi duoc chon
    private void jPanelRandomMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRandomMousePressed
        createArrayRandom(this);
        setColor(jPanelRandom);
        jPanel11.setOpaque(true);
        resetColor(new JPanel[]{jPanelAlmostSorted, jPanelReverse, jPanelReadFile, jPanelSaveArray, jPanelTakeArray, jPanelHandCreateArray}, new JPanel[]{jPanel14, jPanel16, jPanel18, jPanel22, jPanel20, jPanel24});
    }//GEN-LAST:event_jPanelRandomMousePressed

    private void jPanelReverseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelReverseMousePressed
        createArrayReverse(this);
        setColor(jPanelReverse);
        jPanel16.setOpaque(true);
        resetColor(new JPanel[]{jPanelAlmostSorted, jPanelRandom, jPanelReadFile, jPanelSaveArray, jPanelTakeArray, jPanelHandCreateArray}, new JPanel[]{jPanel14, jPanel11, jPanel18, jPanel22, jPanel20, jPanel24});
    }//GEN-LAST:event_jPanelReverseMousePressed

    private void jPanelReadFileMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelReadFileMousePressed
        readFile(this);
        setColor(jPanelReadFile);
        jPanel18.setOpaque(true);
        resetColor(new JPanel[]{jPanelAlmostSorted, jPanelReverse, jPanelRandom, jPanelSaveArray, jPanelTakeArray, jPanelHandCreateArray}, new JPanel[]{jPanel14, jPanel16, jPanel11, jPanel22, jPanel20, jPanel24});
    }//GEN-LAST:event_jPanelReadFileMousePressed

    private void jPanelAlmostSortedMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelAlmostSortedMousePressed
        createArrayAlmostSorted(this);
        setColor(jPanelAlmostSorted);
        jPanel14.setOpaque(true);
        resetColor(new JPanel[]{jPanelRandom, jPanelReverse, jPanelReadFile, jPanelSaveArray, jPanelTakeArray, jPanelHandCreateArray}, new JPanel[]{jPanel11, jPanel16, jPanel18, jPanel22, jPanel20, jPanel24});
    }//GEN-LAST:event_jPanelAlmostSortedMousePressed

    private void jPanelSaveArrayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelSaveArrayMousePressed
        saveArrayHistory(this);
        setColor(jPanelSaveArray);
        jPanel20.setOpaque(true);
        resetColor(new JPanel[]{jPanelRandom, jPanelReverse, jPanelReadFile, jPanelAlmostSorted, jPanelTakeArray, jPanelHandCreateArray}, new JPanel[]{jPanel11, jPanel16, jPanel18, jPanel22, jPanel14, jPanel24});
    }//GEN-LAST:event_jPanelSaveArrayMousePressed

    private void jPanelTakeArrayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelTakeArrayMousePressed
        outPutArrayHistory(this);
        setColor(jPanelTakeArray);
        jPanel22.setOpaque(true);
        resetColor(new JPanel[]{jPanelRandom, jPanelReverse, jPanelReadFile, jPanelAlmostSorted, jPanelSaveArray, jPanelHandCreateArray}, new JPanel[]{jPanel11, jPanel16, jPanel18, jPanel14, jPanel20, jPanel24});
    }//GEN-LAST:event_jPanelTakeArrayMousePressed
// Nhap tay
    private void jPanelHandCreateArrayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelHandCreateArrayMousePressed
        // Nhap tay
        
        setColor(jPanelHandCreateArray);
        jPanel24.setOpaque(true);
        resetColor(new JPanel[]{jPanelRandom, jPanelReverse, jPanelReadFile, jPanelAlmostSorted, jPanelSaveArray, jPanelTakeArray}, new JPanel[]{jPanel11, jPanel16, jPanel18, jPanel14, jPanel20, jPanel22});
        
        // Tao bang nhap du lieu tay
        JDialog jDialogHand = new JDialog();
        jDialogHand.setTitle("Nhập tay");
        jDialogHand.setSize(370, 330);
        jDialogHand.setLocationRelativeTo(null);
        JPanel jPanel = new JPanel();
        jPanel.setBackground(new Color(245,255,255));
        jDialogHand.add(jPanel);
        try {
            this.jSpinnerArrLength.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
        }
        num = ( Integer ) this.jSpinnerArrLength.getValue();
        handLabel = new JLabel[num];
        handTextField = new JTextField[num];
        for(int i=0; i<num; i++) {
            if(i<9) {
                handLabel[i] = new JLabel("Phần tử " + (i+1) + "");
                handTextField[i] = new JTextField();
                handTextField[i].setColumns(4);
            } else {
                handLabel[i] = new JLabel("Phần tử " + (i+1));
                handTextField[i] = new JTextField();
                handTextField[i].setColumns(4);
            }
            jPanel.add(handLabel[i]);
            handLabel[i].setFont(new Font("Arial", Font.PLAIN, 16));
            handLabel[i].setBorder(BorderFactory.createLineBorder(Color.white , 5));
            handLabel[i].setForeground(Color.BLACK);
            jPanel.add(handTextField[i]);
            handTextField[i].setFont(new Font("Arial", Font.PLAIN, 16));
            handTextField[i].setBorder(BorderFactory.createLineBorder(Color.BLACK , 1));
            handTextField[i].setForeground(Color.BLACK);
        }
        jPanel.add(jButtonHandCreateArray);
        jDialogHand.setResizable(false);
        jDialogHand.setVisible(true);
    }//GEN-LAST:event_jPanelHandCreateArrayMousePressed
// Nhap tay - Ok
    private void jButtonHandCreateArrayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonHandCreateArrayMousePressed
        try {
            if(num!=0)
            deleteArray(this);
            try {
                this.jSpinnerArrLength.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
            }
            num = ( Integer ) this.jSpinnerArrLength.getValue();
            arrLabel = new JLabel[num];
            arrValue = new int[num];
            for(int i=0; i<num; i++) {
                // Them gia tri vao nhan
                arrLabel[i] = new JLabel(handTextField[i].getText(), JLabel.CENTER);
                if (i == 0)
                arrLabel[i].setLocation(((int) ((18 - num) * 0.5) * 65) + 0, 160);
                else
                arrLabel[i].setLocation(arrLabel[i-1].getX() + 70, 160);
                this.jPanelMain.add(arrLabel[i]);
                arrLabel[i].setSize(55, 55);
                arrLabel[i].setFont(new Font("Arial", Font.PLAIN, 25));
                arrLabel[i].setBorder(BorderFactory.createLineBorder(Color.white , 4));
                arrLabel[i].setForeground(Color.white);

                // Them gia tri vao mang sap xep
                arrValue[i]= Integer.valueOf(handTextField[i].getText());
            }
            this.jPanelMain.setVisible(true);
        } catch (NumberFormatException e) {
            // Loi nhap
            jPanelMain.removeAll();
            num=0;
            //            System.exit(0);
        }
    }//GEN-LAST:event_jButtonHandCreateArrayMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemoSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemoSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemoSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemoSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
//                new DemoSort().setVisible(true);
                DemoSort main = new DemoSort();
                main.setVisible(true);
                main.setLocationRelativeTo(null);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupAgl;
    private javax.swing.JButton jButtonHandCreateArray;
    private javax.swing.JButton jButtonRun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAlgo;
    private javax.swing.JLabel jLabelBestCase;
    private static javax.swing.JLabel jLabelCountSwap;
    private javax.swing.JLabel jLabelLevelAlg;
    private javax.swing.JLabel jLabelWorstCase;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel1Sub2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelAlmostSorted;
    private javax.swing.JPanel jPanelHandCreateArray;
    private static javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPanel jPanelRandom;
    private javax.swing.JPanel jPanelReadFile;
    private javax.swing.JPanel jPanelReverse;
    private javax.swing.JPanel jPanelSaveArray;
    private javax.swing.JPanel jPanelSoluong;
    private javax.swing.JPanel jPanelSub1;
    private javax.swing.JPanel jPanelTakeArray;
    private javax.swing.JRadioButton jRadioButtonBubble;
    private javax.swing.JRadioButton jRadioButtonHeap;
    private javax.swing.JRadioButton jRadioButtonInsertion;
    private javax.swing.JRadioButton jRadioButtonQuick;
    private javax.swing.JRadioButton jRadioButtonSelection;
    private javax.swing.JScrollPane jScrollPaneContentAgl;
    private javax.swing.JSpinner jSpinnerArrLength;
    private javax.swing.JTextArea jTextAreaDescription;
    // End of variables declaration//GEN-END:variables
    private static JLabel[] arrLabel;
    private static int arrValue[];
    private static int num = 0;
    private static JLabel jLabelArrEmpty = new JLabel("Chưa tạo mảng", JLabel.CENTER);
    private static Thread[] threads = new Thread[1000];
    private static int time = 50;
    private static int countThread = -1;
    private static int countSwap = 0;
    private static int arrValueHistory[];
    private JLabel[] handLabel;
    private JTextField[] handTextField;
    private int Red=0, Green=0, Blue=0;
    
    // Hand code
    
    // Lưu trữ tạm thời mảng để có thể sử dụng chó việc so sánh các giải thuật
    public void saveArrayHistory(DemoSort a) {
        
        if(num==0) {
            jLabelArrEmpty.setLocation(460 , 160);
            jPanelMain.add(jLabelArrEmpty);
            jLabelArrEmpty.setSize(200,55);
            jLabelArrEmpty.setFont(new Font("Arial", Font.PLAIN, 25));
            jLabelArrEmpty.setBorder(BorderFactory.createLineBorder(Color.white , 4));
            jLabelArrEmpty.setForeground(Color.white);
        } else {
            arrValueHistory = new int[arrValue.length];
            
            // Lay gia tri tu mang truoc khi xoa
            for(int i=0; i<arrValue.length; i++) {
                arrValueHistory[i]=arrValue[i];
            }
            System.out.println("Da luu mang");
            
            JDialog jDialogGUI = new JDialog();
            jDialogGUI.setTitle("Thông báo");
            jDialogGUI.setSize(200, 100);
            jDialogGUI.setResizable(false);
            jDialogGUI.setLocationRelativeTo(null);

            // Tao noi dung
            JTextArea jTextAreaGUI = new JTextArea("Đã lưu mảng thành công");
            jTextAreaGUI.setEditable(false);
            jDialogGUI.add(jTextAreaGUI);
            jDialogGUI.setVisible(true);
        }
    }
    public static void outPutArrayHistory(DemoSort a) {
        if(num==0) {
            jLabelArrEmpty.setLocation(460 , 160);
            jPanelMain.add(jLabelArrEmpty);
            jLabelArrEmpty.setSize(200,55);
            jLabelArrEmpty.setFont(new Font("Arial", Font.PLAIN, 25));
            jLabelArrEmpty.setBorder(BorderFactory.createLineBorder(Color.white , 4));
            jLabelArrEmpty.setForeground(Color.white);
        } else {
            deleteArray(a);
            arrLabel = new JLabel[arrValueHistory.length];
            arrValue = new int[arrValueHistory.length];
            try {
                    a.jSpinnerArrLength.commitEdit();
                    a.jSpinnerArrLength.setValue(arrValueHistory.length);
                } catch (ParseException ex) {
                    Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
            }
            for(int i=0; i<arrValueHistory.length; i++) {
                // Them gia tri vao nhan
                arrLabel[i] = new JLabel("" + arrValueHistory[i], JLabel.CENTER);
                if (i == 0)
                        arrLabel[i].setLocation(((int) ((18 - arrValueHistory.length) * 0.5) * 65) + 0, 160);
                else
                        arrLabel[i].setLocation(arrLabel[i-1].getX() + 70, 160);
                a.jPanelMain.add(arrLabel[i]);
                arrLabel[i].setSize(55, 55);
                arrLabel[i].setFont(new Font("Arial", Font.PLAIN, 25));
                arrLabel[i].setBorder(BorderFactory.createLineBorder(Color.white , 4));
                arrLabel[i].setForeground(Color.white);

                // Them gia tri vao mang sap xep
                arrValue[i]= arrValueHistory[i];
    //            System.out.println(arrValue[i]);
            }
            a.jPanelMain.setVisible(true);
        }
    }
    
    
    public static void createArrayRandom(DemoSort a) {
        deleteArray(a);
        Random random = new Random();
        try {
            a.jSpinnerArrLength.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
        }
        num = ( Integer ) a.jSpinnerArrLength.getValue();
        arrLabel = new JLabel[num];
        arrValue = new int[num];
        for(int i=0; i<num; i++) {
            // Them gia tri vao nhan
            int rd = random.nextInt(100);
            arrLabel[i] = new JLabel("" + rd, JLabel.CENTER);
            if (i == 0)
                    arrLabel[i].setLocation(((int) ((18 - num) * 0.5) * 65) + 0, 160);
            else
                    arrLabel[i].setLocation(arrLabel[i-1].getX() + 70, 160);
            a.jPanelMain.add(arrLabel[i]);
            arrLabel[i].setSize(55, 55);
            arrLabel[i].setFont(new Font("Arial", Font.PLAIN, 25));
            arrLabel[i].setBorder(BorderFactory.createLineBorder(Color.white , 4));
            arrLabel[i].setForeground(Color.white);
            
            // Them gia tri vao mang sap xep
            arrValue[i]= rd;
//            System.out.println(arrValue[i]);
        }
        a.jPanelMain.setVisible(true);
    }
    
    public static void createArrayReverse(DemoSort a) {
        deleteArray(a);
        Random random = new Random();
        try {
            a.jSpinnerArrLength.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
        }
        num = ( Integer ) a.jSpinnerArrLength.getValue();
        arrLabel = new JLabel[num];
        arrValue = new int[num];

        
                
        int[] temp = new int[num];
        
        // Them data vao mang temp
        for(int i=0; i<num; i++) {
            int rd = random.nextInt(100);
            temp[i] = rd;
        }
        // Sap xep nguoc
        bubbleSortReverse(temp);
        a.printArray(temp);
        
        for(int i=0; i<num; i++) {
            // Them gia tri vao nhan
            int tempValue = temp[i];
            arrLabel[i] = new JLabel("" + tempValue, JLabel.CENTER);
            if (i == 0)
                arrLabel[i].setLocation(((int) ((18 - num) * 0.5) * 65) + 0, 160);
            else
                arrLabel[i].setLocation(arrLabel[i-1].getX() + 70, 160);
            a.jPanelMain.add(arrLabel[i]);
            arrLabel[i].setSize(55, 55);
            arrLabel[i].setFont(new Font("Arial", Font.PLAIN, 25));
            arrLabel[i].setBorder(BorderFactory.createLineBorder(Color.white , 4));
            arrLabel[i].setForeground(Color.white);
            
            // Them gia tri vao mang sap xep
            arrValue[i]= tempValue;
        }
        a.jPanelMain.setVisible(true);
    }
    
    public static void createArrayAlmostSorted(DemoSort a) {
        deleteArray(a);
        Random random = new Random();
        try {
            a.jSpinnerArrLength.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
        }
        num = ( Integer ) a.jSpinnerArrLength.getValue();
        arrLabel = new JLabel[num];
        arrValue = new int[num];

        
                
        int[] temp = new int[num];
        
        // Them data vao mang temp
        for(int i=0; i<num; i++) {
            int rd = random.nextInt(100);
            temp[i] = rd;
        }
        // Sap xep nguoc
        a.bubbleSortNomar(temp);
        a.printArray(temp);
        
        
        // Tao mang gan duoc sap xep
        for(int i=0; i<num/5; i++) {
            int rd = random.nextInt(num-1);
            int rd1 = random.nextInt(num-1);
            if(rd != rd1)
                swap(temp, rd, rd1);
            else
                i--;
        }

        
        for(int i=0; i<num; i++) {
            // Them gia tri vao nhan
            int tempValue = temp[i];
            arrLabel[i] = new JLabel("" + tempValue, JLabel.CENTER);
            if (i == 0)
                arrLabel[i].setLocation(((int) ((18 - num) * 0.5) * 65) + 0, 160);
            else
                arrLabel[i].setLocation(arrLabel[i-1].getX() + 70, 160);
            a.jPanelMain.add(arrLabel[i]);
            arrLabel[i].setSize(55, 55);
            arrLabel[i].setFont(new Font("Arial", Font.PLAIN, 25));
            arrLabel[i].setBorder(BorderFactory.createLineBorder(Color.white , 4));
            arrLabel[i].setForeground(Color.white);
            
            // Them gia tri vao mang sap xep
            arrValue[i]= tempValue;
        }
        a.jPanelMain.setVisible(true);
    }
    
    public static void deleteArray(DemoSort a) {
        if(jLabelArrEmpty.isVisible()) {
            jLabelArrEmpty.setVisible(false);
            a.jPanelMain.remove(jLabelArrEmpty);
        }
        if(num!=0) {
            countSwap = 0;
            jLabelCountSwap.setText("Số lần hoán đổi: " + countSwap);
            stopThread();
            
            if(arrValue != null || arrLabel != null)
                for(int i=0; i<arrValue.length; i++) {
                    arrLabel[i].setVisible(false);
                    a.jPanelMain.remove(arrLabel[i]);
                }
        }
    }
    public static void readFile(DemoSort a) {
        deleteArray(a);
        File file = new File("/Users/kizuna/Library/Mobile Documents/com~apple~CloudDocs/Documents/Git/Code/NetBeans/Sort/src/main/java/start/array.txt");
        try {
                Scanner scanner = new Scanner(file);
                int i=0;
                num = scanner.nextInt();
                try {
                    a.jSpinnerArrLength.commitEdit();
                    a.jSpinnerArrLength.setValue(num);
                } catch (ParseException ex) {
                    Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
                }
            arrLabel = new JLabel[num];
            arrValue = new int[num];
            while(scanner.hasNextInt()) {
                int temp = scanner.nextInt();
                arrValue[i] = temp;
                arrLabel[i] = new JLabel("" + temp, JLabel.CENTER);
                if (i == 0)
                    arrLabel[i].setLocation(((int) ((18 - num) * 0.5) * 65) + 0, 160);
                else
                    arrLabel[i].setLocation(arrLabel[i-1].getX() + 70, 160);
                a.jPanelMain.add(arrLabel[i]);
                arrLabel[i].setSize(55, 55);
                arrLabel[i].setFont(new Font("Arial", Font.PLAIN, 25));
                arrLabel[i].setBorder(BorderFactory.createLineBorder(Color.white , 4));
                arrLabel[i].setForeground(Color.white);
                i++;
            }
//            System.out.println(num);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DemoSort.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // Phuong thuc sap xep 
    public void bubbleSort(int arr[])
    {
        int n = arr.length;
        for (int i = 0; i < n-1; i++)
            for (int j = 0; j < n-i-1; j++)
                if ( (Integer) arr[j] > (Integer) arr[j+1])
                {
                    // swap arr[j+1] and arr[j]
//                    int temp = ( Integer ) arr[j];
//                    arr[j] = arr[j+1];
//                    arr[j+1] = temp;
                    swap(arr, j+1, j);
                    Swap(arrLabel[j], arrLabel[j+1]);
                }
    }
    
    // Sap xep tao du lieu gan sap xep
    public void bubbleSortNomar(int arr[])
    {
        int n = arr.length;
        for (int i = 0; i < n-1; i++)
            for (int j = 0; j < n-i-1; j++)
                if ( (Integer) arr[j] > (Integer) arr[j+1])
                {
                    // swap arr[j+1] and arr[j]
//                    int temp = ( Integer ) arr[j];
//                    arr[j] = arr[j+1];
//                    arr[j+1] = temp;
                    swap(arr, j+1, j);
                }
    }
    
    // Sap xep tao du lieu nguoc
    public static void bubbleSortReverse(int arr[]) {
        int n = arr.length;
        for (int i = 0; i < n-1; i++)
            for (int j = 0; j < n-i-1; j++)
                if ( (Integer) arr[j] < (Integer) arr[j+1])
                {
                    // swap arr[j+1] and arr[j]
//                    int temp = ( Integer ) arr[j];
//                    arr[j] = arr[j+1];
//                    arr[j+1] = temp;
                    swap(arr, j+1, j);
                }
    }
    
    public void selectionSort(int[] arr) {
        for(int i=0; i<arr.length-1; i++) {
            int indexMin = i;
            for(int j=i+1; j<arr.length; j++)
                if(arr[indexMin]>arr[j])
                    indexMin = j;
            swap(arr, i, indexMin);
            if(i!=indexMin)
                Swap(arrLabel[i], arrLabel[indexMin]);
        }
    }
    public void insertionSort(int[] arr) {
        for (int i = 1; i < arr.length; ++i) {
            int key = arr[i];
            int j = i - 1;
            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                // swap(arr, j+1, j);
                Swap(arrLabel[j], arrLabel[j+1]);
                j = j - 1;
            }
            arr[j + 1] = key;
        }
    }

    public void heapSort(int arr[])
    {
        int n = arr.length;
 
        // Build heap (rearrange array)
        for (int i = n / 2 - 1; i >= 0; i--)
            heapify(arr, n, i);
 
        // One by one extract an element from heap
        for (int i = n - 1; i > 0; i--) {
            // Move current root to end
            int temp = arr[0];
            arr[0] = arr[i];
            arr[i] = temp;
            if(i!=0)
                Swap(arrLabel[0], arrLabel[i]);
 
            // call max heapify on the reduced heap
            heapify(arr, i, 0);
        }
    }
 
    // To heapify a subtree rooted with node i which is
    // an index in arr[]. n is size of heap
    void heapify(int arr[], int n, int i)
    {
        int largest = i; // Initialize largest as root
        int l = 2 * i + 1; // left = 2*i + 1
        int r = 2 * i + 2; // right = 2*i + 2
 
        // If left child is larger than root
        if (l < n && arr[l] > arr[largest])
            largest = l;
 
        // If right child is larger than largest so far
        if (r < n && arr[r] > arr[largest])
            largest = r;
 
        // If largest is not root
        if (largest != i) {
            swap(arr, i, largest);
            if(i!=largest)
                Swap(arrLabel[i], arrLabel[largest]);
            // int swap = arr[i];
            // arr[i] = arr[largest];
            // arr[largest] = swap;
 
            // Recursively heapify the affected sub-tree
            heapify(arr, n, largest);
        }
    }

    static int partition(int[] arr, int low, int high)
    {
        // pivot
        int pivot = arr[high];
        
        // Index of smaller element and
        // indicates the right position
        // of pivot found so far
        int i = (low - 1);
    
        for(int j = low; j <= high - 1; j++)
        {
            
            // If current element is smaller
            // than the pivot
            if (arr[j] < pivot)
            {
                
                // Increment index of
                // smaller element
                i++;
                swap(arr, i, j);
                if(i!=j)
                    Swap(arrLabel[i], arrLabel[j]);
            }
        }
        swap(arr, i + 1, high);
        if((i+1)!=high)
            Swap(arrLabel[i+1], arrLabel[high]);
        return (i + 1);
    }
    
    /* 
            arr[] --> Array to be sorted,
            low --> Starting index,
            high --> Ending index
    */
    public void quickSort(int[] arr, int low, int high)
    {
        if (low < high)
        {
            
            // pi is partitioning index, arr[p]
            // is now at right place
            int pi = partition(arr, low, high);
                    
            // To mau pivot 
            arrLabel[high].setForeground(Color.GREEN);
    
            // Separately sort elements before
            // partition and after partition
            
            // Phan vung ben trai
            quickSort(arr, low, pi - 1);
            
            // Phan vung ben phai
            quickSort(arr, pi + 1, high);
        }
    }
    
    // chua lam 
    int shellSort(int[] arr)
    {
        int n = arr.length;
 
        // Start with a big gap, then reduce the gap
        for (int gap = n/2; gap > 0; gap /= 2)
        {
            // Do a gapped insertion sort for this gap size.
            // The first gap elements a[0..gap-1] are already
            // in gapped order keep adding one more element
            // until the entire array is gap sorted
            for (int i = gap; i < n; i += 1)
            {
                // add a[i] to the elements that have been gap
                // sorted save a[i] in temp and make a hole at
                // position i
                int temp = arr[i];
 
                // shift earlier gap-sorted elements up until
                // the correct location for a[i] is found
                int j;
                for (j = i; j >= gap && arr[j - gap] > temp; j -= gap)
                    arr[j] = arr[j - gap];
 
                // put temp (the original a[i]) in its correct
                // location
                arr[j] = temp;
            }
        }
        return 0;
    }
    
    // In mang test
    public void printArray(int arr[])
    {
        int n = arr.length;
        for (int i=0; i<n; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();
    }
    
    // Phuong thuc hoan doi mang label
    	public static void Swap(JLabel lb1, JLabel lb2) {
		int x1 = lb1.getX();
		int x2 = lb2.getX();
		countThread ++;
                countSwap ++;
		
                
                
                
		int temp = countThread;
		threads[temp] = new Thread(new Runnable() {
		    @Override
		    public void run() {
		    	try {
                            if (temp != 0) {
                                    threads[temp-1].join();
                            }
                            while (lb1.getY() > 100) {
                                lb1.setBorder(BorderFactory.createLineBorder(new Color(255, 78, 69), 4));
                                lb2.setBorder(BorderFactory.createLineBorder(new Color(255, 78, 69), 4));
                                lb1.setLocation(lb1.getX(), lb1.getY() - 10);
                                lb2.setLocation(lb2.getX(), lb2.getY() + 10);
                                Thread.sleep(time);
                            }
                            while (lb1.getX() < x2) {
                                lb1.setBorder(BorderFactory.createLineBorder(new Color(255, 78, 69), 4));
                                lb2.setBorder(BorderFactory.createLineBorder(new Color(255, 78, 69), 4));
                                lb1.setLocation(lb1.getX() + 10, lb1.getY());
                                lb2.setLocation(lb2.getX() - 10, lb2.getY());
                                Thread.sleep(time);
                            }
                            while (lb1.getY() < 140) {
                                lb1.setBorder(BorderFactory.createLineBorder(new Color(255, 78, 69), 4));
                                lb2.setBorder(BorderFactory.createLineBorder(new Color(255, 78, 69), 4));
                                lb1.setLocation(lb1.getX(), lb1.getY() + 10);
                                lb2.setLocation(lb2.getX(), lb2.getY() - 10);
                                Thread.sleep(time);
                            }
                            String txtLb1 = lb1.getText();
                            lb1.setText(lb2.getText());
                            lb2.setText(txtLb1);
                            lb1.setLocation(x1, 160);
                            lb2.setLocation(x2, 160);
                            lb1.setBorder(BorderFactory.createLineBorder(Color.white, 4));
                            lb2.setBorder(BorderFactory.createLineBorder(Color.white, 4));
		    	} catch (Exception e) {
                            e.printStackTrace();
		    	}
		    }
		});
		threads[temp].start();
                
	}
        
        // Phuong thuc hoan doi mang thuc te
        public static void swap(int[] arr, int i, int j) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
        
        // Dung cac luong - thread
        public static void stopThread() {
            try {
                    for( int i = 0; i <= countThread; i++) {
                        threads[i].interrupt(); 
                    }
                    countThread = -1;
                }
            catch(Exception e) {
                e.getStackTrace();
            }
        }
        
    // Thiết đặt màu cho menu jpanel
    private void setColor(JPanel jPanel) {
        jPanel.setBackground(new Color(41,57,80));
    }
    
    private void resetColor(JPanel[] jPanel, JPanel[] opaque) {
        for(int i=0; i<jPanel.length; i++)
            jPanel[i].setBackground(new Color(26,35,71));
        for(int i=0; i<opaque.length; i++)
            opaque[i].setOpaque(false);
        for(int i=0; i<jPanel.length; i++)
            jPanel[i].setBorder(null);
    }
    
    // Kiem tra mang da sap xep?
    private int isSort(int arr[]) {
        int n = arr.length;
        for(int i=0; i<n-1; i++) {
            if(arr[i]>arr[i+1])
                return 0;
        }
        return 1;
    }
}


